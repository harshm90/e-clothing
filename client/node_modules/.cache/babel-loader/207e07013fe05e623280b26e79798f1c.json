{"ast":null,"code":"import { convertCollectionSnapshoToMap, firestore } from \"../../firebase/firebase.utilis\";\nimport { FETCH_COLLECTION_FAIL, FETCH_COLLECTION_START, FETCH_COLLECTION_SUCCESS } from \"./shop.types\";\nexport const fetchCollectionStart = () => ({\n  type: FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFail = errorMsg => ({\n  type: FETCH_COLLECTION_FAIL,\n  payload: errorMsg\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshoToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFail(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/redux/shop/shop.action.js"],"names":["convertCollectionSnapshoToMap","firestore","FETCH_COLLECTION_FAIL","FETCH_COLLECTION_START","FETCH_COLLECTION_SUCCESS","fetchCollectionStart","type","fetchCollectionSuccess","collectionsMap","payload","fetchCollectionFail","errorMsg","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SACEA,6BADF,EAEEC,SAFF,QAGO,gCAHP;AAIA,SACEC,qBADF,EAEEC,sBAFF,EAGEC,wBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEH;AADmC,CAAP,CAA7B;AAIP,OAAO,MAAMI,sBAAsB,GAAGC,cAAc,KAAK;AACvDF,EAAAA,IAAI,EAAEF,wBADiD;AAEvDK,EAAAA,OAAO,EAAED;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAME,mBAAmB,GAAGC,QAAQ,KAAK;AAC9CL,EAAAA,IAAI,EAAEJ,qBADwC;AAE9CO,EAAAA,OAAO,EAAEE;AAFqC,CAAL,CAApC;AAKP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR;AAEAS,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMV,cAAc,GAAGR,6BAA6B,CAACkB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACN,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACD,KALH,EAMGW,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACH,mBAAmB,CAACU,KAAK,CAACC,OAAP,CAApB,CAN1B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import {\n  convertCollectionSnapshoToMap,\n  firestore\n} from \"../../firebase/firebase.utilis\";\nimport {\n  FETCH_COLLECTION_FAIL,\n  FETCH_COLLECTION_START,\n  FETCH_COLLECTION_SUCCESS\n} from \"./shop.types\";\n\nexport const fetchCollectionStart = () => ({\n  type: FETCH_COLLECTION_START\n});\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionFail = errorMsg => ({\n  type: FETCH_COLLECTION_FAIL,\n  payload: errorMsg\n});\n\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n\n    collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionSnapshoToMap(snapshot);\n        dispatch(fetchCollectionSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionFail(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}