{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { convertCollectionSnapshoToMap, firestore } from \"../../firebase/firebase.utilis\";\nimport { fetchCollectionFail, fetchCollectionSuccess } from \"./shop.action\";\nimport { FETCH_COLLECTION_START } from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshoToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFail(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/redux/shop/shop.sagas.js"],"names":["all","call","put","takeLatest","convertCollectionSnapshoToMap","firestore","fetchCollectionFail","fetchCollectionSuccess","FETCH_COLLECTION_START","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,6BADF,EAEEC,SAFF,QAGO,gCAHP;AAIA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,eAA5D;AACA,SAASC,sBAAT,QAAuC,cAAvC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,6BAAD,EAAgCQ,QAAhC,CAAjC;AACA,UAAMV,GAAG,CAACK,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACI,mBAAmB,CAACS,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,UAAU,CAACK,sBAAD,EAAyBC,qBAAzB,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  convertCollectionSnapshoToMap,\n  firestore\n} from \"../../firebase/firebase.utilis\";\nimport { fetchCollectionFail, fetchCollectionSuccess } from \"./shop.action\";\nimport { FETCH_COLLECTION_START } from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshoToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFail(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}