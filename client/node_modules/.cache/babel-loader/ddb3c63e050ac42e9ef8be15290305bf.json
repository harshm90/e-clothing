{"ast":null,"code":"import _defineProperty from \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_ITEM, CLEAR_CART, CLEAR_ITEM_FROM_CART, REMOVE_ITEM, TOGGLE_CART_HIDDEN } from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  cartHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        cartHidden: !state.cartHidden\n      });\n\n    case ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/redux/cart/cart.reducer.js"],"names":["ADD_ITEM","CLEAR_CART","CLEAR_ITEM_FROM_CART","REMOVE_ITEM","TOGGLE_CART_HIDDEN","addItemToCart","removeItemFromCart","INITIAL_STATE","cartHidden","cartItems","cartReducer","state","action","type","payload","filter","cartItem","id"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,UAFF,EAGEC,oBAHF,EAIEC,WAJF,EAKEC,kBALF,QAMO,cANP;AAOA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,kBAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,UAAU,EAAE,CAACG,KAAK,CAACH;AAFrB;;AAIF,SAAKR,QAAL;AACE,+BACKW,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAF1B;;AAIF,SAAKZ,oBAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACE,OAAP,CAAeG,EADlC;AAFb;;AAMF,SAAKd,WAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAF/B;;AAIF,SAAKb,UAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import {\n  ADD_ITEM,\n  CLEAR_CART,\n  CLEAR_ITEM_FROM_CART,\n  REMOVE_ITEM,\n  TOGGLE_CART_HIDDEN\n} from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\nconst INITIAL_STATE = {\n  cartHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        cartHidden: !state.cartHidden\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}