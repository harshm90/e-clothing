{"ast":null,"code":"import _defineProperty from \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.actions\";\nimport { signInLoader } from \"../../redux/user/user.selector\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport { ButtonsBarContainer, SignInContainer, SignInSubtle, SignInTitle } from \"./sign-in.styles\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart,\n  signInLoader\n}) => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(SignInSubtle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign in with your email & password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    handleChange: handleChange,\n    value: password,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"SIGN IN WITH GOOGLE\"))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: signInLoader\n});\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithSpinner)(SignIn);","map":{"version":3,"sources":["/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","compose","createStructuredSelector","emailSignInStart","googleSignInStart","signInLoader","CustomButton","FormInput","WithSpinner","ButtonsBarContainer","SignInContainer","SignInSubtle","SignInTitle","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapStateToProps","isLoading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  emailSignInStart,\n  googleSignInStart\n} from \"../../redux/user/user.actions\";\nimport { signInLoader } from \"../../redux/user/user.selector\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport {\n  ButtonsBarContainer,\n  SignInContainer,\n  SignInSubtle,\n  SignInTitle\n} from \"./sign-in.styles\";\n\nconst SignIn = ({ googleSignInStart, emailSignInStart, signInLoader }) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <SignInSubtle>Sign in with your email & password</SignInSubtle>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          handleChange={handleChange}\n          value={email}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          handleChange={handleChange}\n          value={password}\n          label=\"Password\"\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type=\"submit\">SIGN IN</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            SIGN IN WITH GOOGLE\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: signInLoader\n});\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  WithSpinner\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}