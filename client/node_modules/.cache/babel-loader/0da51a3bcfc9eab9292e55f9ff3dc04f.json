{"ast":null,"code":"import _defineProperty from \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { signInLoader } from \"../../redux/user/user.selector\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { SignUpContainer, SignUpSpan, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = ({\n  signUpStart,\n  isLoading\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, isLoading ? \"\" : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" I do not have an account \"), React.createElement(SignUpSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign up with your email & password \"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" SIGN UP\"))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: signInLoader\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","createStructuredSelector","signUpStart","signInLoader","CustomButton","FormInput","SignUpContainer","SignUpSpan","SignUpTitle","SignUp","isLoading","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapStateToProps","mapDispatchToProps","dispatch","userCredential"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { signInLoader } from \"../../redux/user/user.selector\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { SignUpContainer, SignUpSpan, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = ({ signUpStart, isLoading }) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignUpContainer>\n      {isLoading ? (\n        \"\"\n      ) : (\n        <div>\n          <SignUpTitle> I do not have an account </SignUpTitle>\n          <SignUpSpan>Sign up with your email & password </SignUpSpan>\n\n          <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n            <FormInput\n              type=\"text\"\n              name=\"displayName\"\n              value={displayName}\n              onChange={handleChange}\n              label=\"Display Name\"\n              required\n            />\n            <FormInput\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              label=\"Email\"\n              required\n            />\n            <FormInput\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              label=\"Password\"\n              required\n            />\n            <FormInput\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={handleChange}\n              label=\"Confirm Password\"\n              required\n            />\n            <CustomButton type=\"submit\"> SIGN UP</CustomButton>\n          </form>\n        </div>\n      )}\n    </SignUpContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: signInLoader\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}