{"ast":null,"code":"var _jsxFileName = \"/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\n\nconst StripeButton = ({\n  price,\n  history,\n  clearCart\n}) => {\n  const priceForStripe = price * 100;\n  const publicableKey = \"pk_test_tob8mHn5Fl1XwPhZElQeO0AP006GNxyIax\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert(\"Payment Was Successful\");\n      clearCart();\n      history.push(\"/placed-order\");\n    }).catch(error => {\n      console.log(\"Payment Error\", JSON.parse(error));\n      alert(\"There was an issue with payment. Please make sure you use the provided credit card.\");\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    lable: \"Pay Now\",\n    name: \"Crwn-Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"http://svgshare.com/i/CUz.svg\",\n    description: \"Your total is $\".concat(price),\n    stripeKey: publicableKey,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(StripeButton));","map":{"version":3,"sources":["/Users/Xyne/Desktop/Workspace/CrwnCloths/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["axios","React","connect","withRouter","StripeCheckout","clearCart","StripeButton","price","history","priceForStripe","publicableKey","onToken","token","url","method","data","amount","then","response","alert","push","catch","error","console","log","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBH,EAAAA;AAAlB,CAAD,KAAmC;AACtD,QAAMI,cAAc,GAAGF,KAAK,GAAG,GAA/B;AACA,QAAMG,aAAa,GAAG,4CAAtB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBZ,IAAAA,KAAK,CAAC;AACJa,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAd,MAAAA,SAAS;AACTG,MAAAA,OAAO,CAACY,IAAR,CAAa,eAAb;AACD,KAZH,EAaGC,KAbH,CAaSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA7B;AACAH,MAAAA,KAAK,CACH,qFADG,CAAL;AAGD,KAlBH;AAmBD,GApBD;;AAsBA,SACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,+BALR;AAME,IAAA,WAAW,2BAAoBZ,KAApB,CANb;AAOE,IAAA,SAAS,EAAEG,aAPb;AAQE,IAAA,MAAM,EAAED,cARV;AASE,IAAA,UAAU,EAAC,SATb;AAUE,IAAA,KAAK,EAAEE,OAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAxCD;;AA0CA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,SAAS,EAAE,MAAMuB,QAAQ,CAACvB,SAAS,EAAV;AADa,CAAL,CAAnC;;AAIA,eAAeF,UAAU,CACvBD,OAAO,CACL,IADK,EAELyB,kBAFK,CAAP,CAGErB,YAHF,CADuB,CAAzB","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\n\nconst StripeButton = ({ price, history, clearCart }) => {\n  const priceForStripe = price * 100;\n  const publicableKey = \"pk_test_tob8mHn5Fl1XwPhZElQeO0AP006GNxyIax\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    })\n      .then(response => {\n        alert(\"Payment Was Successful\");\n        clearCart();\n        history.push(\"/placed-order\");\n      })\n      .catch(error => {\n        console.log(\"Payment Error\", JSON.parse(error));\n        alert(\n          \"There was an issue with payment. Please make sure you use the provided credit card.\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      lable=\"Pay Now\"\n      name=\"Crwn-Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      image=\"http://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      stripeKey={publicableKey}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(StripeButton)\n);\n"]},"metadata":{},"sourceType":"module"}